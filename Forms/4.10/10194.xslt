<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2015 sp2 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:altova="http://www.altova.com" xmlns:altovaext="http://www.altova.com/xslt-extensions" xmlns:clitype="clitype" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:ix="http://www.xbrl.org/2008/inlineXBRL" xmlns:java="java" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:map="http://www.w3.org/2005/xpath-functions/map" xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:sps="http://www.altova.com/StyleVision/user-xpath-functions" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" exclude-result-prefixes="#all">
	<xsl:output version="4.0" method="html" indent="no" encoding="UTF-8" use-character-maps="spaces" doctype-public="-//W3C//DTD HTML 4.01 Transitional//EN" doctype-system="http://www.w3.org/TR/html4/loose.dtd"/>
	<xsl:character-map name="spaces">
		<xsl:output-character character="&#160;" string="&amp;nbsp;"/>
	</xsl:character-map>
	<xsl:param name="altova:bGeneratingFromPxf" select="false()"/>
	<xsl:param name="SV_OutputFormat" select="'HTML'"/>
	<xsl:param name="SV_BaseOutputFileName" as="xs:string?">
		<xsl:sequence select="for $i in altovaext:get-base-output-uri(), $j in tokenize( $i, &apos;[/\\]&apos; )[last()] return replace( $j, &apos;\.[^\.\s#%;]*$&apos;, &apos;&apos; )" use-when="function-available(&apos;altovaext:get-base-output-uri&apos;)"/>
	</xsl:param>
	<xsl:param name="SV_GeneratedFileNamePrefix" select="if ( $SV_BaseOutputFileName ) then $SV_BaseOutputFileName else &apos;10194&apos;" as="xs:string?"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:variable name="altova:nPxPerIn" select="96"/>
	<xsl:import-schema schema-location="10194.xsd" use-when="system-property('xsl:is-schema-aware')='yes'"/>
	<xsl:variable name="altova:CssImages" select="()"/>
	<xsl:template match="/">
		<xsl:call-template name="altova:Root"/>
	</xsl:template>
	<xsl:template name="altova:Root">
		<html>
			<head>
				<title/>
				<meta name="generator" content="Altova StyleVision Enterprise Edition 2015 sp2 (http://www.altova.com)"/>
				<meta http-equiv="X-UA-Compatible" content="IE=9"/>
				<xsl:comment>[if IE]&gt;&lt;STYLE type=&quot;text/css&quot;&gt;.altova-rotate-left-textbox{filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3)} .altova-rotate-right-textbox{filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1)} &lt;/STYLE&gt;&lt;![endif]</xsl:comment>
				<xsl:comment>[if !IE]&gt;&lt;!</xsl:comment>
				<style type="text/css">
					<xsl:value-of select="document('style.css')" disable-output-escaping="yes" />
				</style>
				<style type="text/css">.altova-rotate-left-textbox{-webkit-transform: rotate(-90deg) translate(-100%, 0%); -webkit-transform-origin: 0% 0%;-moz-transform: rotate(-90deg) translate(-100%, 0%); -moz-transform-origin: 0% 0%;-ms-transform: rotate(-90deg) translate(-100%, 0%); -ms-transform-origin: 0% 0%;}.altova-rotate-right-textbox{-webkit-transform: rotate(90deg) translate(0%, -100%); -webkit-transform-origin: 0% 0%;-moz-transform: rotate(90deg) translate(0%, -100%); -moz-transform-origin: 0% 0%;-ms-transform: rotate(90deg) translate(0%, -100%); -ms-transform-origin: 0% 0%;}</style>
				<xsl:comment>&lt;![endif]</xsl:comment>
				<style type="text/css">@page { margin-left:0.60in; margin-right:0.60in; margin-top:0.79in; margin-bottom:0.79in } @media print { br.altova-page-break { page-break-before: always; } }</style>
			</head>
			<body>
				<br/>
				<br/>
				<span>
					<xsl:text>Отчет о тепловой экономичности электростанции за</xsl:text>
				</span>
				<br/>
				<br/>
				<br/>
				<span>
					<xsl:text>Раздел 1. Тепловая экономичность электростанции</xsl:text>
				</span>
				<br/>
				<br/>
				<xsl:variable name="altova:table">
					<table border="1">
						<xsl:variable name="altova:CurrContextGrid_0" select="."/>
						<xsl:variable name="altova:ColumnData"/>
						<thead>
							<tr>
								<th>
									<span>
										<xsl:text>Наименование</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Код строки</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Код группы</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Вид проектного топлива</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>№ энергоблока (турбины, котла)</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Среднемесячная установленная электрическая мощность (фактическое значение), МВт</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Средняя нагрузка в часы учета рабочей мощности (фактическое значение), МВт</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Среднемесячная установленная тепловая мощность турбоагрегатов (фактическое значение), Гкал/ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Число часов использования средней установленной электрической мощности (фактическое значение), ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Число часов использования тепловой мощности турбоагрегатов (фактическое значение), ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Отпуск тепла внешним потребителям, всего (фактическое значение), Гкал</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Отпуск тепла внешним потребителям с горячей водой (фактическое значение), Гкал</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Отпуск тепла внешним потребителям отработавшим паром (фактическое значение), Гкал</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Отпуск тепла внешним потребителям от пиковых водогрейных котлов (далее - ПВК) (фактическое значение), Гкал</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Отпуск электрической энергии (фактическое значение),</xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>тыс.кВт*ч</xsl:text>
									</span>
									<br/>
								</th>
								<th>
									<span>
										<xsl:text>Расход тепла на собственные нужды турбоагрегатов (фактическое значение), Гкал</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Расход тепла на собственные нужды котлов (фактическое</xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>значение), Гкал</xsl:text>
									</span>
									<br/>
								</th>
								<th>
									<span>
										<xsl:text>Расход тепла на собственные нужды котлов (номинальное</xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>значение), Гкал</xsl:text>
									</span>
									<br/>
								</th>
								<th>
									<span>
										<xsl:text>Расход электрической энергии на насосы теплофикационной установки (фактическое значение), тыс.кВт*ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Расход условного топлива на отпуск электрической энергии (фактическое значение), т у.т.</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Удельный расход условного топлива на отпуск электрической энергии (фактическое значение), г/кВт*ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Удельный расход условного топлива на отпуск электрической энергии (номинальное значение), г/кВт*ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Удельный расход условного топлива на отпуск электрической энергии (нормативное значение), г/кВт*ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Расход условного топлива на отпуск тепла (фактическое</xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>значение), т у.т.</xsl:text>
									</span>
									<br/>
								</th>
								<th>
									<span>
										<xsl:text>Удельный расход условного топлива на отпуск тепла (фактическое значение), кг/Гкал</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Удельный расход условного топлива на отпуск тепла (номинальное значение), кг/Гкал</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Удельный расход условного топлива на отпуск тепла (нормативное значение), кг/Гкал</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Расход условного топлива на ПВК, всего (фактическое</xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>значение), т у.т.</xsl:text>
									</span>
									<br/>
								</th>
								<th>
									<span>
										<xsl:text>Расход газообразного условного топлива на ПВК (фактическое</xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>значение), т у.т.</xsl:text>
									</span>
									<br/>
								</th>
								<th>
									<span>
										<xsl:text>Увеличение расхода тепла на производство электрической энергии при условном отсутствии отпуска тепла из производственного отбора (фактическое значение), тыс. Гкал</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Увеличение расхода тепла на производство электрической энергии при условном отсутствии отпуска тепла из теплофикационного отбора (фактическое значение), тыс. Гкал</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Увеличение расхода тепла на производство электрической энергии при условном отсутствии отпуска тепла от конденсатора (фактическое значение), тыс. Гкал</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Коэффициент увеличения расхода топлива энергетическими котлами на отпуск электрической энергии при условном отсутствии отпуска тепла от турбоагрегатов (фактическое значение)</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Коэффициент увеличения расхода топлива энергетическими котлами на отпуск тепла при условном отсутствии отпуска тепла от турбоагрегатов (фактическое значение)</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Расход электрической энергии на собственные нужды, всего (фактическое значение), тыс. кВт*ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Расход электрической энергии на собственные нужды на производство электрической энергии (фактическое значение), тыс.кВт*ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Расход электрической энергии на собственные нужды на производство электрической энергии (номинальное значение), тыс.кВт*ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Расход электрической энергии на собственные нужды на отпуск тепла (фактическое значение), тыс.кВт*ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Расход электрической энергии на собственные нужды на отпуск тепла (номинальное значение), тыс.кВт*ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Расход электрической энергии на собственные нужды турбоагрегатов (фактическое значение), тыс.кВт*ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Расход электрической энергии на собственные нужды турбоагрегатов (номинальное значение), тыс.кВт*ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Расход электрической энергии на собственные нужды на циркуляционные насосы (фактическое значение), тыс.кВт*ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Расход электрической энергии на собственные нужды на циркуляционные насосы (номинальное значение), тыс.кВт*ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Расход электрической энергии на собственные нужды котлов, всего (фактическое значение), тыс.кВт*ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Расход электрической энергии на собственные нужды котлов, всего (номинальное значение), тыс.кВт*ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Расход электрической энергии на собственные нужды питательных насосов котлов (фактическое значение), тыс.кВт*ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Расход электрической энергии на собственные нужды питательных насосов котлов (номинальное значение), тыс.кВт*ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>ПД брутто котлов по прямому балансу, %</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Выработка электрической энергии, всего (фактическое значение), тыс.кВт*ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Выработка электрической энергии по теплофикационному циклу (фактическое значение), тыс.кВт*ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Выработка электрической энергии по теплофикационному циклу за счет тепла, отпущенного из производственного отбора (фактическое значение), тыс.кВт*ч </xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Выработка электрической энергии по теплофикационному циклу за счет тепла, отпущенного из теплофикационного отбора (фактическое значение), тыс.кВт*ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Выработка электрической энергии по теплофикационному циклу за счет тепла, отпущенного от конденсатора (фактическое</xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>значение), тыс.кВт*ч</xsl:text>
									</span>
									<br/>
								</th>
								<th>
									<span>
										<xsl:text>Отпуск тепла турбоагрегатами внешним потребителям и на собственные нужды, всего (фактическое значение), Гкал</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Отпуск тепла турбоагрегатами внешним потребителям и на собственные нужды из производственного отбора (фактическое</xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>значение), Гкал</xsl:text>
									</span>
									<br/>
								</th>
								<th>
									<span>
										<xsl:text>Отпуск тепла турбоагрегатами внешним потребителям и на собственные нужды из теплофикационного отбора (фактическое</xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>значение), Гкал</xsl:text>
									</span>
									<br/>
								</th>
								<th>
									<span>
										<xsl:text>Отпуск тепла турбоагрегатами внешним потребителям и на собственные нужды от конденсатора (фактическое значение),</xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>Гкал</xsl:text>
									</span>
									<br/>
								</th>
								<th>
									<span>
										<xsl:text>Время турбоагрегатов в работе (фактическое значение), ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Время турбоагрегатов в резерве (фактическое значение), ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Время работы дубль-блоков с одним корпусом котла (фактическое значение), ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Резерв экономии топлива при сокращении времени работы в вынужденном режиме с одним корпусом котла, т у.т.</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Число пусков турбоагрегатов (фактическое значение)</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Число пусков турбоагрегатов (плановое значение)</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Резерв экономии топлива при сокращении неплановых пусков</xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>турбоагрегатов, т у.т.</xsl:text>
									</span>
									<br/>
								</th>
								<th>
									<span>
										<xsl:text>Давление свежего пара у турбоагрегатов (фактическое</xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>значение), кгс/см2 </xsl:text>
									</span>
									<br/>
								</th>
								<th>
									<span>
										<xsl:text>Давление свежего пара у турбоагрегатов (номинальное</xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>значение), кгс/см2 </xsl:text>
									</span>
									<br/>
								</th>
								<th>
									<span>
										<xsl:text>Резерв экономии топлива из-за отклонения от номинала давления свежего пара перед турбиной, т у.т.</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Давление пара в производственном отборе (фактическое</xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>значение), кгс/см2</xsl:text>
									</span>
									<br/>
								</th>
								<th>
									<span>
										<xsl:text>Давление пара в производственном отборе (номинальное</xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>значение), кгс/см2</xsl:text>
									</span>
									<br/>
								</th>
								<th>
									<span>
										<xsl:text>Резерв экономии топлива из-за отклонения от номинала давления пара в производственном отборе, т у.т.</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Давление пара в теплофикационном отборе (фактическое</xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>значение),</xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>кгс/см2</xsl:text>
									</span>
									<br/>
								</th>
								<th>
									<span>
										<xsl:text>Давление пара в теплофикационном отборе (номинальное</xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>значение), </xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>кгс/см2</xsl:text>
									</span>
									<br/>
								</th>
								<th>
									<span>
										<xsl:text>Резерв экономии топлива из-за отклонения от номинала давления пара в теплофикационном отборе, т у.т.</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Расход свежего пара на турбоагрегат, тыс. т</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Температура свежего пара у турбоагрегата (фактическое</xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>значение), °С</xsl:text>
									</span>
									<br/>
								</th>
								<th>
									<span>
										<xsl:text>Температура свежего пара у турбоагрегата (номинальное</xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>значение), °С</xsl:text>
									</span>
									<br/>
								</th>
								<th>
									<span>
										<xsl:text>Резерв экономии топлива из-за отклонения от номинального значения температуры пара перед турбиной, т у.т.</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Температура пара после промперегрева (фактическое значение), °С</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Температура пара после промперегрева (номинальное значение), °С</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Резерв экономии топлива из-за отклонения от номинального значения температуры пара после промперегрева, т у.т.</xsl:text>
									</span>
									<br/>
									<br/>
								</th>
								<th>
									<span>
										<xsl:text>Давление пара в конденсаторе (фактическое значение), кгс/см2&#160; </xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Давление пара в конденсаторе (номинальное значение), кгс/см2&#160; </xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Резерв экономии топлива из-за отклонения от номинального значения давления пара в конденсаторе, т у.т.</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Температура охлаждающей воды на входе в конденсатор (фактическое значение), °С</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Температура охлаждающей воды на выходе из конденсатора (фактическое значение), °С</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Температурный напор в конденсаторе (фактическое значение), °С</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Температурный напор в конденсаторе (номинальное значение), °С</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Резерв экономии топлива из-за отклонения от номинального значения температурного напора в конденсаторе, т у.т.</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Температура питательной воды (фактическое значение), °С</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Температура питательной воды (номинальное значение), °С</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Резерв экономии топлива из-за отклонения от номинального значения температуры питательной воды, т у.т.</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Удельный расход тепла брутто на турбоагрегаты (фактическое значение), ккал/кВтч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Удельный расход тепла брутто на турбоагрегаты (номинальное значение), ккал/кВт*ч </xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Выработка тепла брутто котлами (фактическое значение),</xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>Гкал</xsl:text>
									</span>
									<br/>
								</th>
								<th>
									<span>
										<xsl:text>Расход питательной воды на котлы (фактическое значение), тыс. т</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Время работы котлов (фактическое значение), ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Расход условного топлива энергетическими котлами, всего,</xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>т у.т.</xsl:text>
									</span>
									<br/>
								</th>
								<th>
									<span>
										<xsl:text>Расход газообразного условного топлива энергетическими</xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>котлами, т у.т.</xsl:text>
									</span>
									<br/>
								</th>
								<th>
									<span>
										<xsl:text>Расход жидкого условного топлива энергетическими котлами, т у.т.</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Расход твердого условного топлива энергетическими котлами,</xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>т у.т.</xsl:text>
									</span>
									<br/>
								</th>
								<th>
									<span>
										<xsl:text>Число пусков котлов (фактическое значение)</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Число пусков котлов (номинальное значение)</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Резерв экономии топлива вследствие неплановых пусков котлоагрегатов, т у.т.</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Температура холодного воздуха (фактическое значение), °С</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Температура воздуха на входе в воздухоподогреватель (фактическое значение), °С</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Температура уходящих газов (фактическое значение), °С</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Температура уходящих газов (номинальное значение), °С</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Резерв экономии топлива из-за отклонения от номинального значения температуры уходящих газов, т у.т.</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Коэффициент избытка воздуха в режимном сечении котла (фактическое значение)</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Коэффициент избытка воздуха в режимном сечении котла (номинальное значение)</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Резерв экономии топлива из-за отклонения от номинального значения коэффициента избытка воздуха в режимном сечении,</xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>т у.т.</xsl:text>
									</span>
									<br/>
								</th>
								<th>
									<span>
										<xsl:text>Присосы воздуха на тракте котлов в сечении измерения температуры уходящих газов (фактическое значение), %</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Присосы воздуха на тракте котлов в сечении измерения температуры уходящих газов (номинальное значение), %</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Резерв экономии топлива из-за отклонения от номинального значения присосов воздуха на тракте котлов, т у.т.</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Присосы воздуха на тракте котлов в сечении измерения температуры уходящих газов-дымосос (фактическое значение), %</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Потери тепла с уходящими газами (фактическое значение), %</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Потери тепла с уходящими газами (номинальное значение), %</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Потери тепла с химической и механической неполнотой сгорания (фактическое значение), %</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Потери тепла с химической и механической неполнотой сгорания (номинальное значение), %</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>КПД брутто котлов по обратному балансу (фактическое значение), %</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>КПД брутто котлов по обратному балансу (номинальное значение),</xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>%</xsl:text>
									</span>
									<br/>
								</th>
								<th>
									<span>
										<xsl:text>Расход электрической энергии на тягу и дутье (фактическое</xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>значение), тыс.кВт*ч</xsl:text>
									</span>
									<br/>
								</th>
								<th>
									<span>
										<xsl:text>Расход электрической энергии на тягу и дутье (номинальное значение), тыс.кВт*ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Расход электрической энергии на пылеприготовление (фактическое значение), тыс.кВт*ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Расход электрической энергии на пылеприготовление (номинальное значение), тыс.кВт*ч</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Резерв экономии топлива из-за отклонения от номинального значения расхода мазута при сжигании каменных углей, т у.т.</xsl:text>
									</span>
								</th>
							</tr>
							<tr>
								<th>
									<span>
										<xsl:text>А</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Б</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>1</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>2</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>3</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>4</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>5</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>6</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>7</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>8</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>9</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>10</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>11</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>12</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>13</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>14</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>15</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>16</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>17</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>18</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>19</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>20</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>21</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>22</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>23</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>24</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>25</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>26</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>27</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>28</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>29</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>30</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>31</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>32</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>33</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>34</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>35</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>36</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>37</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>38</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>39</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>40</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>41</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>42</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>43</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>44</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>45</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>46</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>47</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>48</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>49</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>50</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>51</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>52</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>53</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>54</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>55</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>56</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>57</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>58</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>59</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>60</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>61</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>62</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>63</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>64</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>65</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>66</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>67</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>68</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>69</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>70</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>71</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>72</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>73</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>74</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>75</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>76</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>77</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>78</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>79</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>80</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>81</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>82</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>83</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>84</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>85</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>86</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>87</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>88</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>89</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>90</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>91</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>92</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>93</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>94</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>95</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>96</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>97</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>98</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>99</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>100</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>101</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>102</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>103</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>104</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>105</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>106</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>107</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>108</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>109</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>110</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>111</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>112</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>113</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>114</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>115</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>116</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>117</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>118</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>119</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>120</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>121</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>122</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>123</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>124</xsl:text>
									</span>
								</th>
							</tr>
						</thead>
						<tbody>
							<xsl:for-each select="$XML">
								<xsl:for-each select="document">
									<xsl:for-each select="flat">
										<xsl:for-each select="strdata_01">
											<tr>
												<td>
													<xsl:for-each select="@name">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@code">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column1">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column2">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column3">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column4">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column5">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column6">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column7">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column8">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column9">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column10">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column11">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column12">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column13">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column14">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column15">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column16">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column17">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column18">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column19">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column20">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column21">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column22">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column23">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column24">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column25">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column26">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column27">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column28">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column29">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column30">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column31">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column32">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column33">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column34">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column35">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column36">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column37">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column38">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column39">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column40">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column41">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column42">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column43">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column44">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column45">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column46">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column47">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column48">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column49">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column50">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column51">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column52">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column53">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column54">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column55">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column56">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column57">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column58">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column59">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column60">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column61">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column62">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column63">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column64">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column65">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column66">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column67">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column68">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column69">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column70">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column71">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column72">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column73">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column74">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column75">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column76">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column77">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column78">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column79">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column80">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column81">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column82">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column83">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column84">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column85">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column86">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column87">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column88">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column89">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column90">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column91">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column92">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column93">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column94">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column95">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column96">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column97">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column98">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column99">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column100">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column101">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column102">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column103">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column104">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column105">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column106">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column107">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column108">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column109">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column110">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column111">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column112">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column113">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column114">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column115">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column116">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column117">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column118">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column119">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column120">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column121">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column122">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column123">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@column124">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
											</tr>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
						</tbody>
					</table>
				</xsl:variable>
				<xsl:variable name="altova:col-count" select="sum( for $altova:cell in $altova:table/table/(thead | tbody | tfoot)[ 1 ]/tr[ 1 ]/(th | td) return altova:col-span( $altova:cell ) )"/>
				<xsl:variable name="altova:generate-cols" as="xs:boolean*" select="for $altova:pos in 1 to $altova:col-count return true()"/>
				<xsl:apply-templates select="$altova:table" mode="altova:generate-table">
					<xsl:with-param name="altova:generate-cols" select="$altova:generate-cols"/>
				</xsl:apply-templates>
				<br/>
				<br/>
				<span style="font-size:16pt; ">
					<xsl:text>Служебный раздел</xsl:text>
				</span>
				<br/>
				<hr/>
				<span>
					<xsl:text>Сведения о Субъекте ТЭК, предоставившем информацию</xsl:text>
				</span>
				<br/>
				<xsl:variable name="altova:table">
					<table border="1">
						<xsl:variable name="altova:CurrContextGrid_1" select="."/>
						<xsl:variable name="altova:ColumnData"/>
						<thead>
							<tr>
								<th>
									<span>
										<xsl:text>Служебная информация</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Значение 1</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Значение 2</xsl:text>
									</span>
								</th>
							</tr>
						</thead>
						<tbody>
							<xsl:for-each select="$XML">
								<xsl:for-each select="document">
									<xsl:for-each select="flat">
										<xsl:for-each select="strServiceInf">
											<tr>
												<td>
													<xsl:for-each select="@name">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@code">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@col1">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
											</tr>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
						</tbody>
					</table>
				</xsl:variable>
				<xsl:variable name="altova:col-count" select="sum( for $altova:cell in $altova:table/table/(thead | tbody | tfoot)[ 1 ]/tr[ 1 ]/(th | td) return altova:col-span( $altova:cell ) )"/>
				<xsl:variable name="altova:generate-cols" as="xs:boolean*" select="for $altova:pos in 1 to $altova:col-count return true()"/>
				<xsl:apply-templates select="$altova:table" mode="altova:generate-table">
					<xsl:with-param name="altova:generate-cols" select="$altova:generate-cols"/>
				</xsl:apply-templates>
				<br/>
				<span>
					<xsl:text>Контактная информация</xsl:text>
				</span>
				<br/>
				<xsl:variable name="altova:table">
					<table border="1">
						<xsl:variable name="altova:CurrContextGrid_2" select="."/>
						<xsl:variable name="altova:ColumnData"/>
						<thead>
							<tr>
								<th rowspan="2">
									<span>
										<xsl:text>Контактная информация</xsl:text>
									</span>
								</th>
								<th rowspan="2">
									<span>
										<xsl:text>Код</xsl:text>
									</span>
									<br/>
									<span>
										<xsl:text>строки</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Ф.И.О.</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Должность</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Контактный телефон (с кодом города)</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>Электронный адрес</xsl:text>
									</span>
								</th>
							</tr>
							<tr>
								<th>
									<span>
										<xsl:text>1</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>2</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>3</xsl:text>
									</span>
								</th>
								<th>
									<span>
										<xsl:text>4</xsl:text>
									</span>
								</th>
							</tr>
						</thead>
						<tbody>
							<xsl:for-each select="$XML">
								<xsl:for-each select="document">
									<xsl:for-each select="flat">
										<xsl:for-each select="strContactInf">
											<tr>
												<td>
													<xsl:for-each select="@name">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@code">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@col1">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@col2">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@col3">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
												<td>
													<xsl:for-each select="@col4">
														<span>
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</td>
											</tr>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
						</tbody>
					</table>
				</xsl:variable>
				<xsl:variable name="altova:col-count" select="sum( for $altova:cell in $altova:table/table/(thead | tbody | tfoot)[ 1 ]/tr[ 1 ]/(th | td) return altova:col-span( $altova:cell ) )"/>
				<xsl:variable name="altova:generate-cols" as="xs:boolean*" select="for $altova:pos in 1 to $altova:col-count return true()"/>
				<xsl:apply-templates select="$altova:table" mode="altova:generate-table">
					<xsl:with-param name="altova:generate-cols" select="$altova:generate-cols"/>
				</xsl:apply-templates>
				<br/>
				<span>
					<xsl:text>«____» ___________20__ год</xsl:text>
				</span>
				<br/>
				<span>
					<xsl:text>(дата предоставления </xsl:text>
				</span>
				<br/>
				<span>
					<xsl:text>информации в </xsl:text>
				</span>
				<br/>
				<span>
					<xsl:text>государственную </xsl:text>
				</span>
				<br/>
				<span>
					<xsl:text>информационную систему </xsl:text>
				</span>
				<br/>
				<span>
					<xsl:text>топливно-энергетического </xsl:text>
				</span>
				<br/>
				<span>
					<xsl:text>комплекса)</xsl:text>
				</span>
				<br/>
			</body>
		</html>
	</xsl:template>
	<xsl:function name="altova:is-cell-empty" as="xs:boolean">
		<xsl:param name="altova:cell" as="element()"/>
		<xsl:sequence select="altova:is-node-empty( $altova:cell )"/>
	</xsl:function>
	<xsl:function name="altova:is-node-empty" as="xs:boolean">
		<xsl:param name="altova:node" as="element()"/>
		<xsl:sequence select="every $altova:child in $altova:node/child::node() satisfies ( ( boolean( $altova:child/self::text() ) and string-length( $altova:child ) = 0 ) or ( ( boolean( $altova:child/self::div ) or boolean( $altova:child/self::span ) or boolean( $altova:child/self::a ) ) and altova:is-node-empty( $altova:child ) ) )"/>
	</xsl:function>
	<xsl:function name="altova:col-span" as="xs:integer">
		<xsl:param name="altova:cell" as="element()"/>
		<xsl:sequence select="if ( exists( $altova:cell/@colspan ) ) then xs:integer( $altova:cell/@colspan ) else 1"/>
	</xsl:function>
	<xsl:template match="@* | node()" mode="altova:generate-table">
		<xsl:param name="altova:generate-cols"/>
		<xsl:copy>
			<xsl:apply-templates select="@* | node()" mode="#current">
				<xsl:with-param name="altova:generate-cols" select="$altova:generate-cols"/>
			</xsl:apply-templates>
		</xsl:copy>
	</xsl:template>
	<xsl:template match="tbody" mode="altova:generate-table">
		<xsl:param name="altova:generate-cols"/>
		<xsl:choose>
			<xsl:when test="empty(tr)">
				<xsl:copy>
					<tr>
						<td/>
					</tr>
				</xsl:copy>
			</xsl:when>
			<xsl:otherwise>
				<xsl:copy>
					<xsl:apply-templates select="@* | node()" mode="#current">
						<xsl:with-param name="altova:generate-cols" select="$altova:generate-cols"/>
					</xsl:apply-templates>
				</xsl:copy>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="th | td" mode="altova:generate-table">
		<xsl:choose>
			<xsl:when test="altova:is-cell-empty( . )">
				<xsl:copy>
					<xsl:apply-templates select="@*" mode="#current"/>
					<xsl:text>&#160;</xsl:text>
				</xsl:copy>
			</xsl:when>
			<xsl:otherwise>
				<xsl:copy>
					<xsl:apply-templates select="@* | node()" mode="#current"/>
				</xsl:copy>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:function name="altova:GetChartYValuesForSingleSeries">
		<xsl:param name="seqCategoryLeafPos" as="node()*"/>
		<xsl:param name="nodeSeriesLeafPos" as="node()"/>
		<xsl:param name="bValuesInCategory" as="xs:boolean"/>
		<xsl:for-each select="$seqCategoryLeafPos">
			<xsl:element name="altova:Value">
				<xsl:value-of select="altova:GetChartYValueForSingleSeriesPos($nodeSeriesLeafPos, ., $bValuesInCategory)"/>
			</xsl:element>
		</xsl:for-each>
	</xsl:function>
	<xsl:function name="altova:GetChartYValueForSingleSeriesPos">
		<xsl:param name="nodeSeriesLeafPos" as="node()"/>
		<xsl:param name="nodeCategoryLeafPos" as="node()"/>
		<xsl:param name="bValuesInCategory" as="xs:boolean"/>
		<xsl:variable name="altova:seqCategoryContextIds" select="$nodeCategoryLeafPos/altova:Context/@altova:ContextId" as="xs:string*"/>
		<xsl:variable name="altova:seqSeriesContextIds" select="$nodeSeriesLeafPos/altova:Context/@altova:ContextId" as="xs:string*"/>
		<xsl:variable name="altova:sCommonContextId" select="for $i in $altova:seqCategoryContextIds return if (some $j in $altova:seqSeriesContextIds satisfies $i eq $j) then $i else ()" as="xs:string*"/>
		<xsl:choose>
			<xsl:when test="count($altova:sCommonContextId) gt 1">
				<xsl:message select="concat('Found several values instead of a single one (contexts: ', string-join($altova:sCommonContextId, ', '), ').')" terminate="yes"/>
			</xsl:when>
			<xsl:when test="count($altova:sCommonContextId) lt 1">
				<xsl:message select="concat('XBRL Chart: Info: No value found for position labeled &quot;', $nodeCategoryLeafPos/@altova:sLabel, '&quot;')" terminate="no"/>
				<xsl:sequence select="'altova:no-value'"/>
			</xsl:when>
			<xsl:when test="$bValuesInCategory">
				<xsl:sequence select="xs:string($nodeCategoryLeafPos/altova:Context[@altova:ContextId eq $altova:sCommonContextId]/@altova:Value)"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:sequence select="xs:string($nodeSeriesLeafPos/altova:Context[@altova:ContextId eq $altova:sCommonContextId]/@altova:Value)"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:function>
	<xsl:function name="altova:GetChartLabelForPos" as="xs:string">
		<xsl:param name="nodeParam" as="node()"/>
		<xsl:value-of select="string-join($nodeParam/ancestor-or-self::altova:Pos/@altova:sLabel, ' ')"/>
	</xsl:function>
	<xsl:function name="altova:convert-length-to-pixel" as="xs:decimal">
		<xsl:param name="altova:length"/>
		<xsl:variable name="normLength" select="normalize-space($altova:length)"/>
		<xsl:choose>
			<xsl:when test="ends-with($normLength, 'px')">
				<xsl:value-of select="substring-before($normLength, 'px')"/>
			</xsl:when>
			<xsl:when test="ends-with($normLength, 'in')">
				<xsl:value-of select="xs:decimal(substring-before($normLength, 'in')) * $altova:nPxPerIn"/>
			</xsl:when>
			<xsl:when test="ends-with($normLength, 'cm')">
				<xsl:value-of select="xs:decimal(substring-before($normLength, 'cm')) * $altova:nPxPerIn div 2.54"/>
			</xsl:when>
			<xsl:when test="ends-with($normLength, 'mm')">
				<xsl:value-of select="xs:decimal(substring-before($normLength, 'mm')) * $altova:nPxPerIn div 25.4"/>
			</xsl:when>
			<xsl:when test="ends-with($normLength, 'pt')">
				<xsl:value-of select="xs:decimal(substring-before($normLength, 'pt')) * $altova:nPxPerIn div 72.0"/>
			</xsl:when>
			<xsl:when test="ends-with($normLength, 'pc')">
				<xsl:value-of select="xs:decimal(substring-before($normLength, 'pc')) * $altova:nPxPerIn div 6.0"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="$normLength"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:function>
	<xsl:function name="altova:convert-length-to-mm" as="xs:decimal">
		<xsl:param name="altova:length"/>
		<xsl:variable name="normLength" select="normalize-space($altova:length)"/>
		<xsl:choose>
			<xsl:when test="ends-with($normLength, 'px')">
				<xsl:value-of select="xs:decimal(substring-before($normLength, 'px')) div $altova:nPxPerIn * 25.4"/>
			</xsl:when>
			<xsl:when test="ends-with($normLength, 'in')">
				<xsl:value-of select="xs:decimal(substring-before($normLength, 'in')) * 25.4"/>
			</xsl:when>
			<xsl:when test="ends-with($normLength, 'cm')">
				<xsl:value-of select="xs:decimal(substring-before($normLength, 'cm')) * 10"/>
			</xsl:when>
			<xsl:when test="ends-with($normLength, 'mm')">
				<xsl:value-of select="substring-before($normLength, 'mm') "/>
			</xsl:when>
			<xsl:when test="ends-with($normLength, 'pt')">
				<xsl:value-of select="xs:decimal(substring-before($normLength, 'pt')) * 25.4 div 72.0"/>
			</xsl:when>
			<xsl:when test="ends-with($normLength, 'pc')">
				<xsl:value-of select="xs:decimal(substring-before($normLength, 'pc')) * 25.4 div 6.0"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="number($normLength) div $altova:nPxPerIn * 25.4"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:function>
</xsl:stylesheet>
